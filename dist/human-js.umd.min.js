!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(n="undefined"!=typeof globalThis?globalThis:n||self).HumanJs=e()}(this,(function(){"use strict";!function(n,e){void 0===e&&(e={});var t=e.insertAt;if(n&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],o=document.createElement("style");o.type="text/css","top"===t&&r.firstChild?r.insertBefore(o,r.firstChild):r.appendChild(o),o.styleSheet?o.styleSheet.cssText=n:o.appendChild(document.createTextNode(n))}}(".human-json {\n  --bg: #22262e;\n  --key: #81a2be;\n  --string: #b5bd68;\n  --number: #f0c674;\n  --boolean: #b294bb;\n  --null: #d8773b;\n  --border: #444;\n  --base: #efefef;\n  font-family: Monaco, monospace;\n  padding: 2rem;\n  line-height: 1.4rem;\n  background-color: var(--bg);\n  color: var(--base);\n}\n.human-json .entry {\n  position: relative;\n}\n.human-json .entry .entry {\n  margin-left: 0.3rem;\n  padding-left: 1rem;\n  border-left: 1px solid var(--border);\n}\n.human-json .entry .primitive:last-of-type {\n  padding-bottom: 0.5rem;\n}\n.human-json .entry > .entry .key:before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0px;\n  border-bottom: 1px solid var(--border);\n  width: 0.5rem;\n  height: 0.7rem;\n}\n.human-json .entry.empty > .key:after {\n  content: ': {}';\n}\n.human-json .entry.empty.array > .key:after {\n  content: ': []';\n}\n.human-json .entry .key {\n  color: var(--key);\n}\n.human-json .entry .key:after {\n  content: ': ';\n  color: var(--base);\n}\n.human-json .entry .value.string {\n  color: var(--string);\n}\n.human-json .entry .value.string:before,\n.human-json .entry .value.string.string:after {\n  content: '\"';\n}\n.human-json .entry .value.number {\n  color: var(--number);\n}\n.human-json .entry .value.value.null,\n.human-json .entry .value.undefined {\n  color: var(--null);\n}\n.human-json .entry .value.boolean {\n  color: var(--boolean);\n}\n.human-json details summary,\n.human-json details summary:active {\n  outline: none;\n  cursor: pointer;\n}\n.human-json > .object,\n.human-json .array {\n  border: none;\n}\n.human-json .array > .entry:last-child,\n.human-json .object > .entry:last-child {\n  border: none;\n}\n.human-json .object > .entry:last-child > .key:before,\n.human-json .array > .entry:last-child > .key:before {\n  border-left: 1px solid var(--border);\n}\n");const n=["string","number","boolean","date","null","undefined"];var e={findType:n=>null===n?"null":void 0===n?"undefined":Array.isArray(n)?"array":typeof n,entriesFromObj(n){return Object.entries(n).map((n=>this.addNode(n))).join("\n")},addNode([e,t]){const r=this.findType(t);return n.includes(r)?this.addPrimitive(e,t,r):this.addNonPrimitive(e,t,r)},addPrimitive(n,e,t){let r=e;return null===e?r="null":void 0===e&&(r="undefined"),`<div class="primitive entry ${t}">\n      <span class="key">${n}</span>\n      <span class="value ${t}">${r}</span>\n    </div>`},addNonPrimitive(n,e,t){const r=!Object.keys.length;return`<details class="entry non-primitive ${t} ${r?"empty":""}" ${r?"":"open"}>\n      <summary class="key">${n}</summary>\n      ${this.entriesFromObj(e)}\n    </details>`}};return{build(n){const t="string"==typeof n?JSON.parse(n):n;return`<div class="human-json">${e.entriesFromObj(t)}</div>`}}}));
//# sourceMappingURL=human-js.umd.min.js.map
